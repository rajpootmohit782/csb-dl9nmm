{"version":3,"sources":["redux/reducer.js","App.js","redux/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","tasks","reducers","saveTaskToRedux","state","action","concat","_toConsumableArray","payload","actions","App","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","input","setInput","ourstore","useSelector","console","log","length","_jsx","className","children","_jsxs","value","onChange","e","target","onClick","map","task","configureStore","reducer","myreducer","rootElement","document","getElementById","createRoot","render","Provider","store"],"mappings":"mMAEaA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,gBAAiB,SAACC,EAAOC,GACvBD,EAAMH,MAAK,GAAAK,OAAAC,YAAOH,EAAMH,OAAK,CAAEI,EAAOG,SACxC,KAGWL,EAAoBN,EAAaY,QAAjCN,gBACAN,IAAoB,Q,OCTpB,SAASa,IACtB,IAAMC,EAAWC,cACjBC,EAA0BC,qBAAUC,EAAAC,YAAAH,EAAA,GAA7BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,EAAWC,aAAY,SAAChB,GAAK,OAAKA,CAAK,IAC7CiB,QAAQC,IAAIH,EAASlB,MAAMsB,QAU3B,OACEC,cAAA,OAAKC,UAAU,MAAKC,SAClBC,eAAA,UAAAD,SAAA,CACEF,cAAA,MAAAE,SAAI,UACJF,cAAA,SAAOI,MAAOX,EAAOY,SAbL,SAACC,GACrBT,QAAQC,IAAIQ,EAAEC,OAAOH,OACrBV,EAASY,EAAEC,OAAOH,MACpB,IAWMJ,cAAA,UAAQQ,QAVM,WAClBrB,EAASR,EAAgBc,IACzBI,QAAQC,IAAI,UACZJ,EAAS,GACX,EAMmCQ,SAAC,cAC9BC,eAAA,MAAAD,SAAA,CAAI,iBAAeP,EAASlB,MAAMsB,UACjCJ,EAASlB,MAAMgC,KAAI,SAACC,GAAI,OACvBV,cAAA,MAAAE,SAAKQ,GAAU,QAKzB,CC3BeC,kBAAe,CAC5BC,QAASC,ICALC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHlB,cAACmB,IAAQ,CAACC,MAAOA,EAAMlB,SACrBF,cAACd,EAAG,M","file":"static/js/main.bd8b24f8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const counterSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: {\r\n    tasks: []\r\n  },\r\n  reducers: {\r\n    saveTaskToRedux: (state, action) => {\r\n      state.tasks = [...state.tasks, action.payload];\r\n    }\r\n  }\r\n});\r\nexport const { saveTaskToRedux } = counterSlice.actions;\r\nexport default counterSlice.reducer;\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { saveTaskToRedux } from \"./redux/reducer\";\nexport default function App() {\n  const dispatch = useDispatch();\n  const [input, setInput] = useState();\n  const ourstore = useSelector((state) => state);\n  console.log(ourstore.tasks.length);\n  const changeHandler = (e) => {\n    console.log(e.target.value);\n    setInput(e.target.value);\n  };\n  const saveToRedux = () => {\n    dispatch(saveTaskToRedux(input));\n    console.log(\"called\");\n    setInput(\"\");\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Tasks</h1>\n        <input value={input} onChange={changeHandler}></input>\n        <button onClick={saveToRedux}>save Task</button>\n        <h1>task length = {ourstore.tasks.length}</h1>\n        {ourstore.tasks.map((task) => (\n          <h3>{task}</h3>\n        ))}\n      </header>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport myreducer from \"./reducer\";\r\n\r\n//configureStore is function, to put reducer as a object,,, we get store as return\r\n\r\nexport default configureStore({\r\n  reducer: myreducer\r\n});\r\n","import { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}